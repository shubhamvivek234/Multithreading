  public final class ImmutableClass
{
 
  private final Integer immutableField1;
  private final String immutableField2;
  private final Date mutableField;
 
  //constructor
  private ImmutableClass(Integer fld1, String fld2, Date date)
  {
    this.immutableField1 = fld1;
    this.immutableField2 = fld2;
    this.mutableField = new Date(date.getTime());
  }
 

  public static ImmutableClass createNewInstance(Integer fld1, String fld2, Date date)
  {
    return new ImmutableClass(fld1, fld2, date);
  }
 
 // getter Method
  public Integer getImmutableField1() {
    return immutableField1;
  }
 
  public String getImmutableField2() {
    return immutableField2;
  }
 
  
  //We should not return the reference of original instance variable.
  //Instead a new Date object, with content copied to it, should be returned.
    
  public Date getMutableField() {
    return new Date(mutableField.getTime());    //............deepcloning
  }
  
  
 
  @Override
  public String toString() {
    return immutableField1 +" - "+ immutableField2 +" - "+ mutableField;
  }
}


class TestMain
{
  public static void main(String[] args)
  {
    ImmutableClass im = ImmutableClass.createNewInstance(100,"test", new Date());
    System.out.println(im);
    tryModification(im.getImmutableField1(),im.getImmutableField2(),im.getMutableField());
    System.out.println(im);
  }
 
  private static void tryModification(Integer immutableField1, String immutableField2, Date mutableField)
  {
    immutableField1 = 10000;
    immutableField2 = "test changed";
    mutableField.setDate(10);
  }
}
Program output:

100 - test - Tue Oct 30 21:34:08 IST 2012
100 - test - Tue Oct 30 21:34:08 IST 2012
